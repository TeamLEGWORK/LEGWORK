# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test LEGWORK

on:
  push:
    branches: [ main ]
    paths:
      - 'legwork/**'
      - 'requirements.txt'
      - 'setup.cfg'
      - 'setup.py'
      - 'pyproject.toml'
    
  pull_request:
    branches: [ main ]
    paths:
      - 'legwork/**'
      - 'requirements.txt'
      - 'setup.cfg'
      - 'setup.py'
      - 'pyproject.toml'
      - 'python-package.yml'
  workflow_dispatch:

permissions:
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest coverage pytest-xdist nbmake pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python -m pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test the code with pytest
      run: |
        # test with as many cores as possible for speed
        pytest legwork -n=auto --cov=./ --cov-report=xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        fail_ci_if_error: false
        files: ./cov.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
    - name: Test the notebooks with pytest
      run: |
        # test notebooks in addition to the code
        pytest -n=auto --nbmake "docs/demos"
